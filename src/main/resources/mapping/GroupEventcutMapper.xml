<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinian.alysis.model.GroupEventcutMapper" >
  <resultMap id="BaseResultMap" type="com.yinian.alysis.model.GroupEventcut" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="events_cut" property="eventsCut" jdbcType="VARCHAR" />
    <result column="groups_count_old_pre" property="groupsCountOldPre" jdbcType="INTEGER" />
    <result column="groups_count_old" property="groupsCountOld" jdbcType="INTEGER" />
    <result column="groups_count_new" property="groupsCountNew" jdbcType="INTEGER" />
    <result column="events_count_old_pre" property="eventsCountOldPre" jdbcType="INTEGER" />
    <result column="events_count_old" property="eventsCountOld" jdbcType="INTEGER" />
    <result column="events_count_new" property="eventsCountNew" jdbcType="INTEGER" />
    <result column="period" property="period" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupid, events_cut, groups_count_old_pre, groups_count_old, groups_count_new, 
    events_count_old_pre, events_count_old, events_count_new, period
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group_eventcut
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_eventcut
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yinian.alysis.model.GroupEventcut" >
    insert into group_eventcut (id, groupid, events_cut, 
      groups_count_old_pre, groups_count_old, groups_count_new, 
      events_count_old_pre, events_count_old, events_count_new, 
      period)
    values (#{id,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, #{eventsCut,jdbcType=VARCHAR}, 
      #{groupsCountOldPre,jdbcType=INTEGER}, #{groupsCountOld,jdbcType=INTEGER}, #{groupsCountNew,jdbcType=INTEGER}, 
      #{eventsCountOldPre,jdbcType=INTEGER}, #{eventsCountOld,jdbcType=INTEGER}, #{eventsCountNew,jdbcType=INTEGER}, 
      #{period,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yinian.alysis.model.GroupEventcut" >
    insert into group_eventcut
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="eventsCut != null" >
        events_cut,
      </if>
      <if test="groupsCountOldPre != null" >
        groups_count_old_pre,
      </if>
      <if test="groupsCountOld != null" >
        groups_count_old,
      </if>
      <if test="groupsCountNew != null" >
        groups_count_new,
      </if>
      <if test="eventsCountOldPre != null" >
        events_count_old_pre,
      </if>
      <if test="eventsCountOld != null" >
        events_count_old,
      </if>
      <if test="eventsCountNew != null" >
        events_count_new,
      </if>
      <if test="period != null" >
        period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="eventsCut != null" >
        #{eventsCut,jdbcType=VARCHAR},
      </if>
      <if test="groupsCountOldPre != null" >
        #{groupsCountOldPre,jdbcType=INTEGER},
      </if>
      <if test="groupsCountOld != null" >
        #{groupsCountOld,jdbcType=INTEGER},
      </if>
      <if test="groupsCountNew != null" >
        #{groupsCountNew,jdbcType=INTEGER},
      </if>
      <if test="eventsCountOldPre != null" >
        #{eventsCountOldPre,jdbcType=INTEGER},
      </if>
      <if test="eventsCountOld != null" >
        #{eventsCountOld,jdbcType=INTEGER},
      </if>
      <if test="eventsCountNew != null" >
        #{eventsCountNew,jdbcType=INTEGER},
      </if>
      <if test="period != null" >
        #{period,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinian.alysis.model.GroupEventcut" >
    update group_eventcut
    <set >
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="eventsCut != null" >
        events_cut = #{eventsCut,jdbcType=VARCHAR},
      </if>
      <if test="groupsCountOldPre != null" >
        groups_count_old_pre = #{groupsCountOldPre,jdbcType=INTEGER},
      </if>
      <if test="groupsCountOld != null" >
        groups_count_old = #{groupsCountOld,jdbcType=INTEGER},
      </if>
      <if test="groupsCountNew != null" >
        groups_count_new = #{groupsCountNew,jdbcType=INTEGER},
      </if>
      <if test="eventsCountOldPre != null" >
        events_count_old_pre = #{eventsCountOldPre,jdbcType=INTEGER},
      </if>
      <if test="eventsCountOld != null" >
        events_count_old = #{eventsCountOld,jdbcType=INTEGER},
      </if>
      <if test="eventsCountNew != null" >
        events_count_new = #{eventsCountNew,jdbcType=INTEGER},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinian.alysis.model.GroupEventcut" >
    update group_eventcut
    set groupid = #{groupid,jdbcType=INTEGER},
      events_cut = #{eventsCut,jdbcType=VARCHAR},
      groups_count_old_pre = #{groupsCountOldPre,jdbcType=INTEGER},
      groups_count_old = #{groupsCountOld,jdbcType=INTEGER},
      groups_count_new = #{groupsCountNew,jdbcType=INTEGER},
      events_count_old_pre = #{eventsCountOldPre,jdbcType=INTEGER},
      events_count_old = #{eventsCountOld,jdbcType=INTEGER},
      events_count_new = #{eventsCountNew,jdbcType=INTEGER},
      period = #{period,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_eventcut
  </select>
  
   <select id="findByMapParam" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_eventcut where 1=1 and type='in'
    <if test="groupid != null" >
       and groupid = #{groupid,jdbcType=INTEGER}
    </if>
    <if test="period != null" >
       and date_format(period, '%Y-%m-%d') = #{period}
    </if>
  </select>
</mapper>